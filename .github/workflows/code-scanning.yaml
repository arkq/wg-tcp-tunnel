name: Code Scanning

on:
  push:
  pull_request:
    branches: [ master ]

env:
  MAKEFLAGS: -j8

permissions:
  actions: read
  contents: read
  security-events: write

jobs:

  cmake-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run CMake Linter
      uses: puneetmatharu/cmake-format-lint-action@main
      with:
        args: --check

  code-ql:
    runs-on: ubuntu-latest
    steps:
    - name: Install Dependencies
      run: >
        sudo apt install -y
        libboost-dev
        libboost-log-dev
        libboost-program-options-dev
    - uses: actions/checkout@v4
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: cpp
        queries: security-and-quality
    - name: Configure Project
      run: >
        cmake -S ${{ github.workspace }} -B build
        -DENABLE_NGROK=ON
    - name: Build Project
      run: cmake --build build
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  cpp-linter:
    runs-on: ubuntu-latest
    steps:
    - name: Install Dependencies (Ubuntu)
      run: >
        sudo apt install --no-install-recommends --yes
        libboost-dev
        libboost-log-dev
        libboost-program-options-dev
        libssl-dev
    - uses: actions/checkout@v4
    - name: Run C++ Linter (clang-format & clang-tidy)
      uses: cpp-linter/cpp-linter-action@v2
      id: cpp-linter
      with:
        style: file
    - if: steps.cpp-linter.outputs.checks-failed > 0
      run: exit 1

  markdown-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run Markdown Linter
      uses: nosborn/github-action-markdown-cli@v3
      with:
        files: ${{ github.workspace }}
